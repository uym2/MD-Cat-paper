scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
ggsave("HIV-support_new.pdf",width=8.5,height = 4.7)
head(d1)
d1 %>%  filter(trueTime<p0025 | trueTime>p0975) %>%
mutate(d=ifelse(trueTime<p0025,(p0025-trueTime)/trueTime,(trueTime-p0975)/trueTime)) %>%
ggplot()+
stat_ecdf(aes(x=d,linetype=clockModel,color=interaction(nsmpltime,host,sep="\n")))+
#facet_grid(cols=vars(treeModel),scale="free") +
#geom_vline(xintercept = 1,color="red")+
scale_color_brewer(palette = "Set2")+
scale_x_continuous(name=expression(abs( true - CI~boundary )/true),trans="log10",labels=percent,
breaks = c(0.01,0.033,0.1,0.33,1,3.3,1))+
coord_cartesian(xlim=c(0.0005,8))+
#scale_x_discrete(name="branch length percentile")+
scale_linetype(name="")+
scale_fill_brewer(palette = 7,direction = -1,name="Inside 95% CI: ")+
theme_bw() + theme(legend.position = "right",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>%  filter(trueTime<p0025 | trueTime>p0975) %>%
mutate(d=ifelse(trueTime<p0025,(p0025-trueTime)/trueTime,(trueTime-p0975)/trueTime)) %>%
ggplot()+
stat_ecdf(aes(x=d,linetype=clockModel,color=interaction(nsmpltime,host,sep="\n")))+
#facet_grid(cols=vars(treeModel),scale="free") +
#geom_vline(xintercept = 1,color="red")+
scale_color_brewer(palette = "Set2")+
scale_x_continuous(name=expression(abs( true - CI~boundary )/true),trans="log10",labels=percent,
breaks = c(0.01,0.033,0.1,0.33,1,3.3,1))+
coord_cartesian(xlim=c(0.0005,8))+
#scale_x_discrete(name="branch length percentile")+
scale_linetype(name="")+
scale_fill_brewer(palette = 7,direction = -1,name="Inside 95% CI: ")+
theme_bw() + theme(legend.position = "right",
panel.border = element_rect(colour = "black", fill=NA),legend.title = element_blank())
ggsave("HIV-support-delta_new.pdf",width=8,height = 2.5)
d = read.table("MDCat_HIVsim_CI_new4_divTime.txt",header=T)
d$inside = (d$trueAge >= d$p0025 & d$trueAge <= d$p0975)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1=merge(d,h,by="treeModel")
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
ggplot(d1) +
geom_segment(aes(x=trueAge/height,y=p0025/height,xend=trueAge/height,yend=p0975/height,color=inside),linewidth=0.2,alpha=0.5) +
geom_abline() +
#facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
theme_classic() +
theme(legend.position = "None",panel.border = element_rect(colour = "black", fill=NA)) +
xlab("Normalized true divergence time (year/height)") +
ylab("Normalized estimated divergence time (year/height)")
ggsave("MDCat_HIVsim_CI_new_Divtime.pdf",width=7,height=4)
head(d1)
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
#group_by(clockModel,host,nsmpltime,blg) %>%
group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
#group_by(clockModel,host,nsmpltime,blg,inside) %>%
group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
#facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of nodes")+
scale_x_discrete(name="divergence time percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True divergence time inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
ggsave("HIV-support_new_Divtime.pdf",width=8.5,height = 4.7)
head(d1)
d1 %>%  filter(trueAge<p0025 | trueAge>p0975) %>%
mutate(d=ifelse(trueAge<p0025,(p0025-trueAge)/trueAge,(trueAge-p0975)/trueAge)) %>%
ggplot()+
stat_ecdf(aes(x=d,linetype=clockModel,color=interaction(nsmpltime,host,sep="\n")))+
#facet_grid(cols=vars(treeModel),scale="free") +
#geom_vline(xintercept = 1,color="red")+
scale_color_brewer(palette = "Set2")+
scale_x_continuous(name=expression(abs( true - CI~boundary )/true),trans="log10",labels=percent,
breaks = c(0.01,0.033,0.1,0.33,1,3.3,1))+
coord_cartesian(xlim=c(0.0005,8))+
#scale_x_discrete(name="branch length percentile")+
scale_linetype(name="")+
scale_fill_brewer(palette = 7,direction = -1,name="Inside 95% CI: ")+
theme_bw() + theme(legend.position = "right",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>%  filter(trueAge<p0025 | trueAge>p0975) %>%
mutate(d=ifelse(trueAge<p0025,(p0025-trueAge)/trueAge,(trueAge-p0975)/trueAge)) %>%
ggplot()+
stat_ecdf(aes(x=d,linetype=clockModel,color=interaction(nsmpltime,host,sep="\n")))+
#facet_grid(cols=vars(treeModel),scale="free") +
#geom_vline(xintercept = 1,color="red")+
scale_color_brewer(palette = "Set2")+
scale_x_continuous(name=expression(abs( true - CI~boundary )/true),trans="log10",labels=percent,
breaks = c(0.01,0.033,0.1,0.33,1,3.3,1))+
coord_cartesian(xlim=c(0.0005,8))+
#scale_x_discrete(name="branch length percentile")+
scale_linetype(name="")+
scale_fill_brewer(palette = 7,direction = -1,name="Inside 95% CI: ")+
theme_bw() + theme(legend.position = "right",
panel.border = element_rect(colour = "black", fill=NA),legend.title = element_blank())
ggsave("HIV-support-delta_new_divTime.pdf",width=8,height = 2.5)
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
d2 = d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
d2
mean(d2$n)
d = read.table("MDCat_HIVsim_CI_new4.txt",header=T)
d$inside = (d$trueTime >= d$p0025 & d$trueTime <= d$p0975)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1=merge(d,h,by="treeModel")
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
d2 = d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
mean(d2)
mean(d2$n)
d1 %>%  filter(trueTime<p0025 | trueTime>p0975) %>%
mutate(d=ifelse(trueTime<p0025,(p0025-trueTime)/trueTime,(trueTime-p0975)/trueTime)) %>%
ggplot()+
stat_ecdf(aes(x=d,linetype=clockModel,color=interaction(nsmpltime,host,sep="\n")))+
#facet_grid(cols=vars(treeModel),scale="free") +
#geom_vline(xintercept = 1,color="red")+
scale_color_brewer(palette = "Set2")+
scale_x_continuous(name=expression(abs( true - CI~boundary )/true),trans="log10",labels=percent,
breaks = c(0.01,0.033,0.1,0.33,1,3.3,1))+
coord_cartesian(xlim=c(0.0005,8))+
#scale_x_discrete(name="branch length percentile")+
scale_linetype(name="")+
scale_fill_brewer(palette = 7,direction = -1,name="Inside 95% CI: ")+
theme_bw() + theme(legend.position = "right",
panel.border = element_rect(colour = "black", fill=NA),legend.title = element_blank())
ggplot(d1) +
geom_segment(aes(x=trueTime/height,y=p0025/height,xend=trueTime/height,yend=p0975/height,color=inside),linewidth=0.2,alpha=0.5) +
geom_abline() +
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
theme_classic() +
theme(legend.position = "None",panel.border = element_rect(colour = "black", fill=NA)) +
xlab("Normalized true branch length (year/height)") +
ylab("Normalized estimated branch length (year/height)")
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
#group_by(clockModel,host,nsmpltime,blg,inside) %>%
group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
#group_by(clockModel,host,nsmpltime,blg) %>%
group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
#facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d = read.table("MDCat_HIVsim_CI_new3.txt",header=T)
d$inside = (d$trueTime >= d$p0025 & d$trueTime <= d$p0975)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1=merge(d,h,by="treeModel")
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
ggplot(d1) +
geom_segment(aes(x=trueTime/height,y=p0025/height,xend=trueTime/height,yend=p0975/height,color=inside),linewidth=0.2,alpha=0.5) +
geom_abline() +
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
theme_classic() +
theme(legend.position = "None",panel.border = element_rect(colour = "black", fill=NA)) +
xlab("Normalized true branch length (year/height)") +
ylab("Normalized estimated branch length (year/height)")
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d = read.table("MDCat_HIVsim_CI_new4.txt",header=T)
d$inside = (d$trueTime >= d$p0025 & d$trueTime <= d$p0975)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1=merge(d,h,by="treeModel")
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
ggplot(d1) +
geom_segment(aes(x=trueTime/height,y=p0025/height,xend=trueTime/height,yend=p0975/height,color=inside),linewidth=0.2,alpha=0.5) +
geom_abline() +
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
theme_classic() +
theme(legend.position = "None",panel.border = element_rect(colour = "black", fill=NA)) +
xlab("Normalized true branch length (year/height)") +
ylab("Normalized estimated branch length (year/height)")
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueTime/height, quantile(trueTime/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of branches")+
scale_x_discrete(name="branch length percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True length inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d = read.table("MDCat_HIVsim_CI_new4_divTime.txt",header=T)
d$inside = (d$trueAge >= d$p0025 & d$trueAge <= d$p0975)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1=merge(d,h,by="treeModel")
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
ggplot(d1) +
geom_segment(aes(x=trueAge/height,y=p0025/height,xend=trueAge/height,yend=p0975/height,color=inside),linewidth=0.2,alpha=0.5) +
geom_abline() +
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
theme_classic() +
theme(legend.position = "None",panel.border = element_rect(colour = "black", fill=NA)) +
xlab("Normalized true divergence time (year/height)") +
ylab("Normalized estimated divergence time (year/height)")
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
#group_by(clockModel,host,nsmpltime,blg) %>%
group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
#group_by(clockModel,host,nsmpltime,blg,inside) %>%
group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
#facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of nodes")+
scale_x_discrete(name="divergence time percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True divergence time inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
#group_by(clockModel,host,nsmpltime,blg,inside) %>%
group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of nodes")+
scale_x_discrete(name="divergence time percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True divergence time inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime,blg) %>%
#group_by(clockModel,host,blg) %>%
mutate(c=n()) %>%
group_by(clockModel,host,nsmpltime,blg,inside) %>%
#group_by(clockModel,host,blg,inside) %>%
summarise(n=n()/unique(c)[1]) %>%
ggplot(aes(x=blg,fill=inside,y=n))+
geom_bar(aes(),stat="identity")+
facet_grid(rows=vars(clockModel),cols=vars(host,nsmpltime),scale="free") +
#facet_grid(rows=vars(clockModel),cols=vars(host),scale="free") +
#facet_wrap(~host+nsmpltime,scale="free") +
geom_hline(yintercept = 0.95,color="red")+
scale_y_continuous(labels=percent,name="Portion of nodes")+
scale_x_discrete(name="divergence time percentile")+
scale_fill_brewer(palette = 7,direction = -1,name="True divergence time inside 95% CI: ")+
theme_classic() + theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA))
d2 = d1 %>% group_by(clockModel,host,nsmpltime) %>%
mutate(blg=cut(trueAge/height, quantile(trueAge/height,(0:10)/10), include.lowest = T,
labels = c(1:10)*10)) %>%
group_by(clockModel,host,nsmpltime) %>%
mutate(c=n()) %>%
group_by(host,nsmpltime,inside,clockModel) %>%
summarise(n=n()/unique(c)[1]) %>% filter(inside == FALSE)
d2
#setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/sysBio_revision")
require(ggplot2)
require(scales)
require(tidyverse)
dk = read.table("../sysBio_revision/MDCat_Angiosperm_vary_k_nodeAge_revised.txt",header=T)
d1 = read.table("../angiosperm/all_divergence.txt",header=T)
d1$method = factor(d1$method,levels=c("Blnorm","Bstrict","Brcla","RelTime","BEAST_lognorm","wLogDate","MD-Cat"),
labels = c("BEAST: LogNorm","BEAST: RLC","BEAST: strict","RelTime","BEAST_lnorm_old","wLogDate","MD-Cat"))
dk %>% group_by(scenario  ,  rep , k) %>%
summarise(norm_rmse = sqrt(mean( (trueNodeAge-estNodeAge)^2) )/140) %>%
mutate(method="MD-Cat") %>%
#dk %>% group_by(scenario  ,  rep , k) %>%
#  summarise(norm_rmse = sqrt(mean( (trueNodeAge-estNodeAge)^2) )/140) %>%
ggplot(aes(x=k,y=norm_rmse,color=method)) +
geom_line(stat="summary",linewidth=1) +
stat_summary() +
scale_x_log10(breaks=c(2,5,10,25,50,100)) +
xlab("# rate categories") +
facet_wrap(~scenario,nrow=1)+
geom_hline(aes(yintercept=norm_rmse,color=method),
data= d1 %>% filter(method!="MD-Cat") %>% group_by(method,scenario) %>% summarise(norm_rmse=mean(norm_rmse)))+
scale_color_manual(values = RColorBrewer::brewer.pal(7,'Paired')[c(1,3,2,6,7,5)]) +
scale_y_continuous(name="divergence time RSME (height normalized)") +
theme_classic() + theme(legend.position = c(0.75,0.76)) +
guides(color  = guide_legend(nrow = 3))
dk %>% group_by(scenario  ,  rep , k) %>%
summarise(rmsn = sqrt(mean( (trueNodeAge-estNodeAge)^2) )/140) %>%
group_by(scenario,k) %>% summarise(mean=mean(rmsn)) %>%
pivot_wider(names_from = scenario,values_from=mean)
r <- quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95))
quantiles_95 <- function(x) {
r <- quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
dkc = read.table("MDCat_Angiosperm_vary_k_with_model_selection.txt",header=T)
dkc$error = abs(dkc$trueNodeAge-dkc$estNodeAge)/140
dkc$selected = "Others"
dkc[dkc$k == "crossval",]$selected = "Cross-validation"
dkc[dkc$k == "50",]$selected = "Default (k=50)"
dkc[dkc$k == "aic",]$selected = "AIC"
dkc[dkc$k == "bic",]$selected = "BIC"
dkc$selected = factor(dkc$selected, levels=c("Default (k=50)","Cross-validation","AIC","BIC","Others"))
dcast(dkc[,c(1,8,7)],scenario~selected,fun.aggregate = mean)
mean((dcast(dkc[,c(1,8,7)],scenario~selected,fun.aggregate = mean)[,3]-
dcast(dkc[,c(1,8,7)],scenario~selected,fun.aggregate = mean)[,2])*100)
dcast(dkc[,c(1,3,7)],scenario~k,fun.aggregate = mean)
qplot(factor(sub("k","",merge(dkc[dkc$k == "crossval" & dkc$nodeName =="I0",c(1,2,4,5,6,7)],
dkc[! dkc$k %in% c("crossval","aic","bic") & dkc$nodeName =="I0",c(1,2,3,4,5,6,7)],
by=c("scenario","rep","nodeName","trueNodeAge","estNodeAge","error"))$k),levels=c(2,5,10,25,50,100)))+theme_bw()+xlab("k")+ylab("# replicates")
qplot(factor(sub("k","",merge(dkc[dkc$k == "aic" & dkc$nodeName =="I0",c(1,2,4,5,6,7)],
dkc[! dkc$k %in% c("crossval","aic","bic") & dkc$nodeName =="I0",c(1,2,3,4,5,6,7)],
by=c("scenario","rep","nodeName","trueNodeAge","estNodeAge","error"))$k),levels=c(2,5,10,25,50,100)))+theme_bw()+xlab("k")+ylab("# replicates")
qplot(factor(sub("k","",merge(dkc[dkc$k == "bic" & dkc$nodeName =="I0",c(1,2,4,5,6,7)],
dkc[! dkc$k %in% c("crossval","aic","bic") & dkc$nodeName =="I0",c(1,2,3,4,5,6,7)],
by=c("scenario","rep","nodeName","trueNodeAge","estNodeAge","error"))$k),levels=c(2,5,10,25,50,100)))+theme_bw()+xlab("k")+ylab("# replicates")
head(dkc)
dkc %>% group_by(  scenario ,   rep  , k, selected) %>%
summarise(e = sqrt(mean( (trueNodeAge-estNodeAge)^2) ) , height=140) %>%
ggplot(aes(x=scenario,y=e/height,fill=selected)) +
stat_summary(position=position_dodge2(width=0.75),
fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width = 0.9),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 0), axis.title.x = element_blank(),
legend.title = element_blank(),legend.position = "bottom") +
ylab("divergence time error")+
scale_fill_brewer(palette = "Set2")+
scale_y_continuous(labels = percent)
